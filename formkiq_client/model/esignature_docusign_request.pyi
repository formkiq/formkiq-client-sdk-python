# coding: utf-8

"""
    FormKiQ HTTP API

    Formkiq API: Document Management Platform API using JWT Authentication  # noqa: E501

    The version of the OpenAPI document: 1.12.0
    Contact: support@formkiq.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from formkiq_client import schemas  # noqa: F401


class EsignatureDocusignRequest(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
            emailSubject = schemas.StrSchema
            
            
            class status(
                schemas.EnumBase,
                schemas.StrSchema
            ):
                
                @schemas.classproperty
                def CREATED(cls):
                    return cls("created")
                
                @schemas.classproperty
                def SENT(cls):
                    return cls("sent")
            developmentMode = schemas.BoolSchema
            
            
            class signers(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['EsignatureDocusignSigner']:
                        return EsignatureDocusignSigner
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['EsignatureDocusignSigner'], typing.List['EsignatureDocusignSigner']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'signers':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'EsignatureDocusignSigner':
                    return super().__getitem__(i)
            
            
            class carbonCopies(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['EsignatureDocusignCarbonCopy']:
                        return EsignatureDocusignCarbonCopy
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['EsignatureDocusignCarbonCopy'], typing.List['EsignatureDocusignCarbonCopy']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'carbonCopies':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'EsignatureDocusignCarbonCopy':
                    return super().__getitem__(i)
            
            
            class recipientTabs(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['EsignatureDocusignRecipientTab']:
                        return EsignatureDocusignRecipientTab
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['EsignatureDocusignRecipientTab'], typing.List['EsignatureDocusignRecipientTab']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'recipientTabs':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'EsignatureDocusignRecipientTab':
                    return super().__getitem__(i)
            __annotations__ = {
                "emailSubject": emailSubject,
                "status": status,
                "developmentMode": developmentMode,
                "signers": signers,
                "carbonCopies": carbonCopies,
                "recipientTabs": recipientTabs,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["emailSubject"]) -> MetaOapg.properties.emailSubject: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["status"]) -> MetaOapg.properties.status: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["developmentMode"]) -> MetaOapg.properties.developmentMode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["signers"]) -> MetaOapg.properties.signers: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["carbonCopies"]) -> MetaOapg.properties.carbonCopies: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["recipientTabs"]) -> MetaOapg.properties.recipientTabs: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["emailSubject", "status", "developmentMode", "signers", "carbonCopies", "recipientTabs", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["emailSubject"]) -> typing.Union[MetaOapg.properties.emailSubject, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["status"]) -> typing.Union[MetaOapg.properties.status, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["developmentMode"]) -> typing.Union[MetaOapg.properties.developmentMode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["signers"]) -> typing.Union[MetaOapg.properties.signers, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["carbonCopies"]) -> typing.Union[MetaOapg.properties.carbonCopies, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["recipientTabs"]) -> typing.Union[MetaOapg.properties.recipientTabs, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["emailSubject", "status", "developmentMode", "signers", "carbonCopies", "recipientTabs", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        emailSubject: typing.Union[MetaOapg.properties.emailSubject, str, schemas.Unset] = schemas.unset,
        status: typing.Union[MetaOapg.properties.status, str, schemas.Unset] = schemas.unset,
        developmentMode: typing.Union[MetaOapg.properties.developmentMode, bool, schemas.Unset] = schemas.unset,
        signers: typing.Union[MetaOapg.properties.signers, list, tuple, schemas.Unset] = schemas.unset,
        carbonCopies: typing.Union[MetaOapg.properties.carbonCopies, list, tuple, schemas.Unset] = schemas.unset,
        recipientTabs: typing.Union[MetaOapg.properties.recipientTabs, list, tuple, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'EsignatureDocusignRequest':
        return super().__new__(
            cls,
            *_args,
            emailSubject=emailSubject,
            status=status,
            developmentMode=developmentMode,
            signers=signers,
            carbonCopies=carbonCopies,
            recipientTabs=recipientTabs,
            _configuration=_configuration,
            **kwargs,
        )

from formkiq_client.model.esignature_docusign_carbon_copy import EsignatureDocusignCarbonCopy
from formkiq_client.model.esignature_docusign_recipient_tab import EsignatureDocusignRecipientTab
from formkiq_client.model.esignature_docusign_signer import EsignatureDocusignSigner
