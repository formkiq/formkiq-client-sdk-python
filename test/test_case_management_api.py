# coding: utf-8

"""
    FormKiQ API

    Formkiq API: Document Management Platform API using OAuth(JWT) Authentication  You can find out more about FormKiQ at [https://formkiq.com](http://formkiq.com).  ## Introduction  FormKiQ is an API-first (head-less), battle-tested document management API. The FormKiQ API provides all the API endpoints to build your Perfect Document Management Platform.  FormKiQ API was built on top of [OpenAPI specification](https://www.openapis.org), so it is easy to use the API spec file with any application that supports the OpenAPI specification.  Open API OAuth Specification - https://raw.githubusercontent.com/formkiq/formkiq-core/master/docs/openapi/openapi-jwt.yaml  Open API IAM Specification - https://raw.githubusercontent.com/formkiq/formkiq-core/master/docs/openapi/openapi-iam.yaml  ## Authentication FormKiQ offers three forms of authentication:   - OAuth(JWT)   - AWS IAM   - API Key

    The version of the OpenAPI document: 1.14.0
    Contact: support@formkiq.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from formkiq_client.api.case_management_api import CaseManagementApi


class TestCaseManagementApi(unittest.TestCase):
    """CaseManagementApi unit test stubs"""

    def setUp(self) -> None:
        self.api = CaseManagementApi()

    def tearDown(self) -> None:
        pass

    def test_add_case(self) -> None:
        """Test case for add_case

        Add New Case
        """
        pass

    def test_delete_case(self) -> None:
        """Test case for delete_case

        Delete Case
        """
        pass

    def test_delete_case_document(self) -> None:
        """Test case for delete_case_document

        Delete Document from Case
        """
        pass

    def test_delete_nigo(self) -> None:
        """Test case for delete_nigo

        Delete Nigo
        """
        pass

    def test_delete_nigo_document(self) -> None:
        """Test case for delete_nigo_document

        Delete Document from Nigo
        """
        pass

    def test_delete_task(self) -> None:
        """Test case for delete_task

        Delete Task
        """
        pass

    def test_delete_task_document(self) -> None:
        """Test case for delete_task_document

        Delete Document from Task
        """
        pass

    def test_get_case(self) -> None:
        """Test case for get_case

        Get Case details
        """
        pass

    def test_get_case_documents(self) -> None:
        """Test case for get_case_documents

        Get list of document in a case
        """
        pass

    def test_get_case_nigo(self) -> None:
        """Test case for get_case_nigo

        Get nigo in a case
        """
        pass

    def test_get_case_nigos(self) -> None:
        """Test case for get_case_nigos

        Get list of Nigos in a case
        """
        pass

    def test_get_case_task(self) -> None:
        """Test case for get_case_task

        Get task in a case
        """
        pass

    def test_get_case_tasks(self) -> None:
        """Test case for get_case_tasks

        Get list of tasks in a case
        """
        pass

    def test_get_cases(self) -> None:
        """Test case for get_cases

        Get Case listing
        """
        pass

    def test_get_nigo_documents(self) -> None:
        """Test case for get_nigo_documents

        Get list of document in a task
        """
        pass

    def test_get_task_documents(self) -> None:
        """Test case for get_task_documents

        Get list of document in a task
        """
        pass

    def test_update_case(self) -> None:
        """Test case for update_case

        Update existing Case
        """
        pass

    def test_update_nigo(self) -> None:
        """Test case for update_nigo

        Update existing Nigo
        """
        pass

    def test_update_task(self) -> None:
        """Test case for update_task

        Update existing Task
        """
        pass


if __name__ == '__main__':
    unittest.main()
