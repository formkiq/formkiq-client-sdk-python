# coding: utf-8

"""
    FormKiQ HTTP API

    Formkiq API: Document Management Platform API using OAuth(JWT) Authentication  You can find out more about FormKiQ at [https://formkiq.com](http://formkiq.com).  ## Introduction  FormKiQ is an API-first (head-less), battle-tested document management API. The FormKiQ API provides all the API endpoints to build your Perfect Document Management Platform.  FormKiQ API was built on top of [OpenAPI specification](https://www.openapis.org), so it is easy to use the API spec file with any application that supports the OpenAPI specification.  Open API OAuth Specification - https://raw.githubusercontent.com/formkiq/formkiq-core/master/docs/openapi/openapi-jwt.yaml  Open API IAM Specification - https://raw.githubusercontent.com/formkiq/formkiq-core/master/docs/openapi/openapi-iam.yaml  ## Authentication FormKiQ offers three forms of authentication:   - OAuth(JWT)   - AWS IAM   - API Key

    The version of the OpenAPI document: 1.13.0
    Contact: support@formkiq.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from formkiq_client.api.document_workflows_api import DocumentWorkflowsApi


class TestDocumentWorkflowsApi(unittest.TestCase):
    """DocumentWorkflowsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = DocumentWorkflowsApi()

    def tearDown(self) -> None:
        pass

    def test_add_document_workflow(self) -> None:
        """Test case for add_document_workflow

        Add document workflow
        """
        pass

    def test_add_document_workflow_decisions(self) -> None:
        """Test case for add_document_workflow_decisions

        Approve/Reject document in approval queue
        """
        pass

    def test_add_queue(self) -> None:
        """Test case for add_queue

        Add queue
        """
        pass

    def test_add_workflow(self) -> None:
        """Test case for add_workflow

        Add workflow
        """
        pass

    def test_delete_queue(self) -> None:
        """Test case for delete_queue

        Delete queue
        """
        pass

    def test_delete_workflow(self) -> None:
        """Test case for delete_workflow

        Delete workflow
        """
        pass

    def test_get_document_workflow(self) -> None:
        """Test case for get_document_workflow

        Get document workflow
        """
        pass

    def test_get_document_workflows(self) -> None:
        """Test case for get_document_workflows

        Get document workflows
        """
        pass

    def test_get_queue(self) -> None:
        """Test case for get_queue

        Get queue
        """
        pass

    def test_get_queues(self) -> None:
        """Test case for get_queues

        Get queues
        """
        pass

    def test_get_workflow(self) -> None:
        """Test case for get_workflow

        Get workflow
        """
        pass

    def test_get_workflow_documents(self) -> None:
        """Test case for get_workflow_documents

        Get list of documents in workflow
        """
        pass

    def test_get_workflow_queue_documents(self) -> None:
        """Test case for get_workflow_queue_documents

        Get list of documents in queue
        """
        pass

    def test_get_workflows(self) -> None:
        """Test case for get_workflows

        Get workflows
        """
        pass

    def test_set_workflow(self) -> None:
        """Test case for set_workflow

        Add workflow
        """
        pass


if __name__ == '__main__':
    unittest.main()
